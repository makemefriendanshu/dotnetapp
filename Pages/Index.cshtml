@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<link href="~/css/bootstrap.min.css" rel="stylesheet" type="text/css" />
<link href="~/css/icons.css" rel="stylesheet" type="text/css" />
<link href="~/css/style.css" rel="stylesheet" type="text/css" />

<div class="" style="padding-top: 60px;">
    <div class="">
        <div class="row">
            <div class="col-lg-14">
                <div class="card m-b-30">
                    <div class="card-body">

                        <button id="enter-exit-button" class="navbar-toggler" type="button" aria-expanded="false"
                            aria-label="Toggle navigation" onclick="getUserLocation()" style="border: ridge;">
                            Enter
                        </button>
                        <div id="lat">
                        </div>

                        <div id="map" class="grid-container">
                        </div>
                    </div>
                </div>
            </div> <!-- end col -->
        </div> <!-- end row -->

    </div> <!-- end container -->
</div>

<style>
    .grid-container {
        display: grid;
        /* Enables CSS Grid layout */
        grid-template-columns: 1fr;
        /* Creates two columns of equal width */
        gap: 20px;
        /* Adds a 20px gap between the columns */
    }

    @@media (min-width: 768px) {

        /* For tablets and desktops */
        .grid-container {
            grid-template-columns: repeat(2, 1fr);
            /* Two columns for tablets */
        }
    }
</style>

<script src="~/js/jquery.min.js"></script>
<script src="~/js/popper.min.js"></script>
<script src="~/js/bootstrap.min.js"></script>
<script src="~/js/modernizr.min.js"></script>
<script src="~/js/waves.js"></script>
<script src="~/js/jquery.slimscroll.js"></script>
<script src="~/js/jquery.nicescroll.js"></script>
<script src="~/js/jquery.scrollTo.min.js"></script>

<!-- google maps api -->
<script src="http://maps.google.com/maps/api/js?key=AIzaSyCtSAR45TFgZjOs4nBFFZnII-6mMHLfSYI"></script>
<!-- Gmaps file -->
<script src="~/plugins/gmaps/gmaps.min.js"></script>
<!-- demo codes -->
<script src="~/pages/gmaps.js"></script>

<!-- App js -->
<script src="~/js/app.js"></script>


<script type="text/javascript">
    let itemCount = 0;
    function getUserLocation() {
        let type = document.getElementById("enter-exit-button").innerText;
        console.log(type)
        $('#map')[0].setAttribute('data-item-count', itemCount);
        navigator.geolocation.getCurrentPosition((position) => { alert(position.coords.latitude) })
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(
                (position) => {
                    const latitude = position.coords.latitude;
                    const longitude = position.coords.longitude;
                    const latDivHtml = `<div id="lat-${itemCount}" style="display: none"></div><div id="long-${itemCount}" style="display: none"></div>`;
                    $('#lat').append(latDivHtml);
                    $("#lat-" + itemCount)[0].innerText = latitude;
                    $("#long-" + itemCount)[0].innerText = longitude;
                    const mapDivHtml = `<div id="gmaps-markers-${itemCount}" class="gmaps" style="margin-top: 10px;"></div>`;
                    $('#map').append(mapDivHtml);
                    window.scrollTo(0, document.body.scrollHeight);
                    itemCount++;
                    if (type == 'Enter') {
                        $("#enter-exit-button")[0].innerText = 'Exit';
                    }
                    if (type == 'Exit') {
                        $("#enter-exit-button")[0].innerText = 'Enter';
                    }
                    console.log(`Latitude: ${latitude}, Longitude: ${longitude}`);
                },
                (error) => {
                    switch (error.code) {
                        case error.PERMISSION_DENIED:
                            alert("User denied the request for Geolocation.");
                            break;
                        case error.POSITION_UNAVAILABLE:
                            alert("Location information is unavailable.");
                            break;
                        case error.TIMEOUT:
                            alert("The request to get user location timed out.");
                            break;
                        case error.UNKNOWN_ERROR:
                            alert("An unknown error occurred.");
                            break;
                    }
                }
            );
        } else {
            alert("Geolocation is not supported by this browser.");
        }
    }
</script>